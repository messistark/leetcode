在 O(n log n) 时间复杂度和常数级空间复杂度下，对链表进行排序。

示例 1:

输入: 4->2->1->3
输出: 1->2->3->4
示例 2:

输入: -1->5->3->4->0
输出: -1->0->3->4->5

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/sort-list
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。



/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode sortList(ListNode head) {
        if(head == null || head.next == null)
                return head;
            ListNode low = head;
            ListNode fast = head;
            while(fast.next != null && fast.next.next != null){
                low = low.next;
                fast = fast.next.next;
            }

            ListNode headR = low.next;
            low.next = null;
            ListNode left = sortList(head);
            ListNode right = sortList(headR);

            //合并链表
            ListNode newhead = new ListNode();
            ListNode cur = newhead;
            while(left!=null && right!=null){
                if(left.val<right.val){
                    cur.next = left;
                    left = left.next;
                }else{
                    cur.next = right;
                    right = right.next;
                }
                cur = cur.next;
            }
            //剩余的直接续上
            cur.next = left!=null? left : right;
            return newhead.next;
    }
}
