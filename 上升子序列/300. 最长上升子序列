300. 最长上升子序列
给定一个无序的整数数组，找到其中最长上升子序列的长度。

示例:

输入: [10,9,2,5,3,7,101,18]
输出: 4 
解释: 最长的上升子序列是 [2,3,7,101]，它的长度是 4。
说明:

可能会有多种最长上升子序列的组合，你只需要输出对应的长度即可。
你算法的时间复杂度应该为 O(n2) 。

//动态规划
class Solution {
    public int lengthOfLIS(int[] nums) {
        int n = nums.length;
        if(n == 0)
            return 0;
        int[] dp = new int[n];

        
        dp[0] = 1;
            
        int max = 0;
        for(int i = 0; i<nums.length; i++){
            int j = i-1;
            //需要遍历前面所有已经计算的上升序列
            while(j >= 0){
                if(nums[i]> nums[j] && dp[j]+1>dp[i])
                    dp[i] = dp[j] + 1;
                j--;
            }
            dp[i] = Math.max(1, dp[i]);
            if(dp[i] > max)
                max = dp[i];
        }
        return max;
    }
}
