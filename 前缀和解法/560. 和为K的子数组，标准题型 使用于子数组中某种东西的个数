给定一个整数数组和一个整数 k，你需要找到该数组中和为 k 的连续的子数组的个数。

示例 1 :

输入:nums = [1,1,1], k = 2
输出: 2 , [1,1] 与 [1,1] 为两种不同的情况。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/subarray-sum-equals-k
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。


class Solution {

    public int subarraySum(int[] nums, int k) {
        Map<Integer, Integer> map = new HashMap<>();
        int result = 0;
        int sum = 0;
        map.put(0, 1);
        for(int i =0; i< nums.length; i++){
            sum+= nums[i];
            if(map.containsKey(sum - k))
                result += map.get(sum - k);

            if(!map.containsKey(sum))
                map.put(sum, 1);
            else{
                int value= map.get(sum);
                map.put(sum, ++value);
            }
            
        }

        
        return result;
    }
}
