给你一个整数数组 nums 和一个整数 k。

如果某个 连续 子数组中恰好有 k 个奇数数字，我们就认为这个子数组是「优美子数组」。

请返回这个数组中「优美子数组」的数目。


示例 1：

输入：nums = [1,1,2,1,1], k = 3
输出：2
解释：包含 3 个奇数的子数组是 [1,1,2,1] 和 [1,2,1,1] 。
示例 2：

输入：nums = [2,4,6], k = 1
输出：0
解释：数列中不包含任何奇数，所以不存在优美子数组。
示例 3：

输入：nums = [2,2,2,1,2,2,1,2,2,2], k = 2
输出：16

//记录前缀的奇数个数和
class Solution {
    public int numberOfSubarrays(int[] nums, int k) {
        int[] pre = new int[nums.length+1];
        pre[0] = 0;
        Map<Integer, Integer> map = new HashMap<>();
        map.put(0, 1);
        int res = 0;
        for(int i = 1; i <= nums.length; i++){
            if(nums[i-1]%2==1)
                pre[i] = pre[i-1] + 1;
            else
                pre[i] = pre[i-1];

            if(map.keySet().contains(pre[i] - k))
                res+=map.get(pre[i] - k);
            
            if(map.keySet().contains(pre[i])){
                int temp = map.get(pre[i])+1;
                map.put(pre[i], temp);
            }else
                map.put(pre[i], 1);
            
        }
        return res;

    }
}
