16. 最接近的三数之和
给定一个包括 n 个整数的数组 nums 和 一个目标值 target。找出 nums 中的三个整数，使得它们的和与 target 最接近。返回这三个数的和。假定每组输入只存在唯一答案。

 

示例：

输入：nums = [-1,2,1,-4], target = 1
输出：2
解释：与 target 最接近的和是 2 (-1 + 2 + 1 = 2) 。

class Solution {
    public int threeSumClosest(int[] nums, int target) {
        Arrays.sort(nums);
        int min = Integer.MAX_VALUE;
        int result = -1;
        for(int i = 0; i<= nums.length-3; i++){
            int t = target - nums[i];
            //一头一尾向中间查找
            int left = i+1;
            int right = nums.length-1;
            while(left!=right){
                if(Math.abs(t - nums[right] - nums[left]) < min ){ 
                    min = Math.abs(t - nums[right] - nums[left]);
                    result = nums[right] + nums[left] + nums[i];
                }
                if((nums[right] + nums[left]) > t)
                    right--;
                else if((nums[right] + nums[left]) < t)
                    left++;
                else
                    return target;
            }

        }
        return result;
    }
}
