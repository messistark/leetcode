给定一个只包含三种字符的字符串：（ ，） 和 *，写一个函数来检验这个字符串是否为有效字符串。有效字符串具有如下规则：

任何左括号 ( 必须有相应的右括号 )。
任何右括号 ) 必须有相应的左括号 ( 。
左括号 ( 必须在对应的右括号之前 )。
* 可以被视为单个右括号 ) ，或单个左括号 ( ，或一个空字符串。
一个空字符串也被视为有效字符串。
示例 1:

输入: "()"
输出: True
示例 2:

输入: "(*)"
输出: True
示例 3:

输入: "(*))"
输出: True

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/valid-parenthesis-string
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

class Solution {
    //迷失的括号序列
    //牛客
    public boolean checkValidString(String s) {
        Stack<Integer> stack1 = new Stack<>();
        Stack<Integer> stack2 = new Stack<>();

        for(int i = 0; i< s.length(); i++){
            if(s.charAt(i) == '(')
                stack1.push(i);
            if(s.charAt(i) == ')'){
                if(stack1.size() == 0){
                    if(stack2.size()>0)
                        stack2.pop();
                    else
                        return false;
                }
                else
                    stack1.pop();
            }
            if(s.charAt(i) == '*')
                stack2.push(i);
        }

        while(stack1.size()!=0 && stack2.size()!=0){
            if(stack1.pop()> stack2.pop())
                return false;
        }
 

        if(stack1.size() == 0)
            return true;
        return false;
    }
}
