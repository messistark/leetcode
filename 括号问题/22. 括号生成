数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的 括号组合。

 

示例：

输入：n = 3
输出：[
       "((()))",
       "(()())",
       "(())()",
       "()(())",
       "()()()"
     ]

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/generate-parentheses
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

//递归解决
//利用左括号数必须大于右括号数的性质
class Solution {
    List<String> result = new ArrayList<>();
    public List<String> generateParenthesis(int n) {
        String s = "";
        backtrack(s, n, n);
        return result;
    }

    void backtrack(String s,int m, int n){
        
        if(m==0 && n==0){
            result.add(s);
            return;
        }
        
        if(m > 0){
           
            backtrack(s+"(", m-1, n);
   
        }
            
        if(n > m){
           
            backtrack( s+")", m, n-1);
      
        }

            
            

    }
}
