给定一个平衡括号字符串 S，按下述规则计算该字符串的分数：

() 得 1 分。
AB 得 A + B 分，其中 A 和 B 是平衡括号字符串。
(A) 得 2 * A 分，其中 A 是平衡括号字符串。
 

示例 1：

输入： "()"
输出： 1
示例 2：

输入： "(())"
输出： 2
示例 3：

输入： "()()"
输出： 2
示例 4：

输入： "(()(()))"
输出： 6

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/score-of-parentheses
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

/**
【 （ 1 2 （ 4 】
遇到) ，弹出4 ，知道遇到（，再将4压入站
遇到) 1 + 2 + 4 ，知道遇到（，再将7压入站
**/
class Solution {
    public int scoreOfParentheses(String S) {
        Stack<String> s = new Stack<>();
        for(int i=0; i<S.length(); i++){
            String c = String.valueOf(S.charAt(i));
            if(c.equals("("))
                s.push(c);
            else if(c.equals(")")){
                String temp = s.pop();
                int iner = 0;
                while(!temp.equals("(")){
                    iner += Integer.parseInt(temp);
                    temp = s.pop();
                }
                if(iner == 0)
                    s.push("1");
                else if(iner > 0){
                    s.push(String.valueOf(iner*2));
                }
            }
        }
        int result = 0;
        while(!s.empty()){
            result += Integer.parseInt(s.pop());
        }
        return result;
    }
}
