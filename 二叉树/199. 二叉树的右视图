给定一棵二叉树，想象自己站在它的右侧，按照从顶部到底部的顺序，返回从右侧所能看到的节点值。

示例:

输入: [1,2,3,null,5,null,4]
输出: [1, 3, 4]
解释:

   1            <---
 /   \
2     3         <---
 \     \
  5     4       <---


/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> result = new ArrayList<>();
        Queue<TreeNode> queue = new LinkedList<TreeNode>();
        if(root==null)
            return result;
        queue.offer(root);
        
       
        while(!queue.isEmpty()){
            int size = queue.size();
            int n = queue.size();
            while(size != 0){
                TreeNode tn = queue.poll();
                if(size == n)
                    result.add(tn.val);
                if(tn.right!=null)
                    queue.offer(tn.right);
                if(tn.left!=null)
                    queue.offer(tn.left);
                size--;
            }   
        }
        return result;
    }
}
