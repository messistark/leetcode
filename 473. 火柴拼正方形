还记得童话《卖火柴的小女孩》吗？现在，你知道小女孩有多少根火柴，请找出一种能使用所有火柴拼成一个正方形的方法。不能折断火柴，可以把火柴连接起来，并且每根火柴都要用到。

输入为小女孩拥有火柴的数目，每根火柴用其长度表示。输出即为是否能用所有的火柴拼成正方形。

示例 1:

输入: [1,1,2,2,2]
输出: true

解释: 能拼成一个边长为2的正方形，每边两根火柴。
示例 2:

输入: [3,3,3,3,4]
输出: false

解释: 不能用所有火柴拼成一个正方形。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/matchsticks-to-square
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

class Solution {
    int[] res = new int[4];
    int possible = 0;
    int[] nums = null;
    public boolean makesquare(int[] nums) {
        if(nums.length < 4)
            return false;
        int sum = 0;
        for(int num : nums)
            sum += num;
        if((sum % 4)!=0)
            return false;
        
        
        possible = sum / 4;
        this.nums = nums;

        return dfs(0, nums.length);

    }

    public boolean dfs(int index, int n){
        if(index == n)
            return res[0] == res[1] && res[1] == res[2] && res[2] == res[3];
        //尝试将该火柴依次放到4个边中，看看可以不
        for(int i=0; i<4; i++){
            if(res[i] + nums[index] <= possible){
                res[i] += nums[index];
                if(dfs(index+1, n))
                    return true;
                res[i] -= nums[index];
            }
        }
        return false;
    }
}
