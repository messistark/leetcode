一个整型数组 nums 里除两个数字之外，其他数字都出现了两次。请写程序找出这两个只出现一次的数字。要求时间复杂度是O(n)，空间复杂度是O(1)。

 

示例 1：

输入：nums = [4,1,4,6]
输出：[1,6] 或 [6,1]
示例 2：

输入：nums = [1,2,10,4,1,4,3,3]
输出：[2,10] 或 [10,2]

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/shu-zu-zhong-shu-zi-chu-xian-de-ci-shu-lcof
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。


class Solution {
    //a[0] =1  0x0001  第一组

// a[1] =1  0x0001  第一组

// a[2] =3  0x0011  第二组

// a[3] =5  0x0101  第一组

// a[4] =2  0x0010  第二组

// a[5] =2  0x0010  第二组

    public int[] singleNumber(int[] nums) {
        //找到分组位
        int bitmask = 0;
        for(int n : nums)
            bitmask = bitmask ^ n;
        bitmask = bitmask &  (-bitmask); //x & (-x) 是保留位中最右边 1 ,可以进行分组
                                        //有1是因为两个不同的数造成的，相同异或为0

        //分组查找
        int mask1 = 0;
        int mask2 = 0;
        for(int n : nums){
            if((n & bitmask) == 0)
                mask1 = mask1 ^ n;
            else
                mask2 = mask2 ^ n;
        }

        int[] res = new int[2];
        res[0] = mask1;
        res[1] = mask2;
        return res;
    }
}
